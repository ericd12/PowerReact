{"version":3,"sources":["components/NavbarMain.js","constants.js","helpers.js","components/Elements/ElementForm.js","components/ComponentWrapper.js","components/Elements/CreateElement.js","components/Elements/ManageElement.js","styles.js","components/Elements/ElementsTableRow.js","components/Elements/ElementsTable.js","components/Elements/DropdownItems/Formats/FormatsTableRow.js","components/Elements/DropdownItems/Formats/FormatList.js","components/Elements/DropdownItems/Formats/CreateFormat.js","components/Elements/DropdownItems/Formats/ManageFormat.js","components/Elements/DropdownItems/Categories/CategoriesTableRow.js","components/Elements/DropdownItems/Categories/CategoryList.js","components/Elements/DropdownItems/Categories/CreateCategory.js","components/Elements/DropdownItems/Categories/ManageCategory.js","components/Elements/DropdownItems/Markets/MarketsTableRow.js","components/Elements/DropdownItems/Markets/MarketList.js","components/Elements/DropdownItems/Markets/CreateMarket.js","components/Elements/DropdownItems/Markets/ManageMarket.js","components/Tracks/TracksBoard/Task.js","components/Tracks/TracksBoard/Column.js","components/Tracks/TrackForm.js","components/Tracks/CreateTrack.js","components/Tracks/ManageTrack.js","components/Tracks/TracksTableElemData.js","components/Tracks/TracksTableRow.js","components/Tracks/TracksTable.js","components/Programs/ProgramBoard/Task.js","components/Programs/ProgramBoard/Column.js","components/Programs/ProgramForm.js","components/Programs/CreateProgram.js","components/Programs/ManageProgram.js","components/Programs/ProgramsTableRow.js","components/Programs/ProgramsTable.js","App.js","index.js","logo.png"],"names":["NavbarMain","Navbar","bg","expand","Brand","href","alt","className","height","src","logo","width","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Dropdown","Divider","API_URL","BLANK_ELEMENT","elementCategory","elementCogRating","elementDescription","elementDuration","elementFormat","elementLabel","elementLink","elementMarket","elementNumber","elementPhysRating","elementSubCategory","createEnum","val","reduce","all","one","_id","ElementForm","buttonText","onChange","onChangeDropdown","onSubmit","useState","formats","categories","markets","dropdowns","setDropdowns","useEffect","Promise","axios","get","then","data","Form","Row","Group","as","Col","controlId","Label","Control","name","placeholder","required","type","value","e","Object","keys","map","format","idx","key","item","defaultValue","style","justifyContent","Button","Link","to","variant","ComponentWrapper","children","fluid","restProps","Container","defaultProps","CreateElement","props","target","setState","list","preventDefault","state","post","res","alert","catch","err","console","log","Card","Body","this","Component","ManageElement","match","params","put","history","push","response","error","CoolTableHead","styled","th","StyledTableRow","tr","StyledContainer","StyledTable","Table","StyledTbody","tbody","StyledThead","thead","ElementsTableRow","deleteElement","whiteSpace","size","onClick","ElementsTable","delete","elements","filter","el","hover","currentelement","FormatsTableRow","deleteFormat","FormatList","fetchFormats","prevProps","newItem","marginTop","currentFormat","CreateFormat","new_item","ManageFormat","CategoriesTableRow","deleteCategory","CategoryList","fetchCategories","currentcat","CreateCategory","ManageCategory","MarketsTableRow","deleteMarket","MarketList","fetchMarkets","prev","currentMarket","CreateMarket","ManageMarket","TrackTable","ElementCard","div","isDragging","Task","index","draggableId","draggableProps","dragHandleProps","innerRef","ref","StyledColumnWrap","StyledTaskList","ListGroup","isDraggingOver","Column","items","Header","droppableId","droppableProps","backgroundColor","task","TrackForm","trackNumber","trackName","alignItems","CreateTrack","columns","trackInfo","copy","onDragEnd","source","destination","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","entries","ManageTrack","track","elementsEnums","tracks","oldState","element","some","trackEle","sourceId","destinationId","ElemData","slideNumber","TracksTableRow","deleteTrack","info","borderless","responsive","border","fontSize","TracksTable","t","borderBottom","currentTrack","direction","ProgramForm","programNumber","programName","CreateProgram","programInfo","ManageProgram","program","tracksEnums","programs","progTrac","ProgramsTableRow","deleteProgram","ProgramsTable","currentProgram","App","component","exact","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cace2e00.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar, NavDropdown, Dropdown } from \"react-bootstrap\";\nimport logo from \"../logo.png\";\n\nconst NavbarMain = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          className=\"d-inline-block align-top\"\n          height=\"40\"\n          src={logo}\n          width=\"200\"\n        />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n          <NavDropdown id=\"element-dropdown\" title=\"Elements\">\n            <NavDropdown.Item href=\"/-elements/create\">\n              Create Element\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/-elements\">\n              Manage Elements\n            </NavDropdown.Item>\n            <Dropdown.Divider />\n            <NavDropdown id=\"items-dropdown\" title=\"Manage Dropdown Options\">\n              <NavDropdown.Item href=\"/-formats\">Format</NavDropdown.Item>\n              <NavDropdown.Item href=\"/-categories\">Category</NavDropdown.Item>\n              <NavDropdown.Item href=\"/-markets\">Market</NavDropdown.Item>\n            </NavDropdown>\n          </NavDropdown>\n          <NavDropdown id=\"track-dropdown\" title=\"Tracks\">\n            <NavDropdown.Item href=\"/-tracks/create\">\n              Create Track\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/-tracks\">Manage Tracks</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown id=\"basic-nav-dropdown\" title=\"Programs\">\n            <NavDropdown.Item href=\"/-programs/create\">\n              Create Program\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"/-programs\">\n              Manage Programs\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavbarMain;\n","export const API_URL = \"http:/api\";\n\nexport const BLANK_ELEMENT = {\n  elementCategory: \"\",\n  elementCogRating: \"\",\n  elementDescription: \"\",\n  elementDuration: \"\",\n  elementFormat: \"\",\n  elementLabel: \"\",\n  elementLink: \"\",\n  elementMarket: \"\",\n  elementNumber: \"\",\n  elementPhysRating: \"\",\n  elementSubCategory: \"\",\n};\n","export const isArrayEmpty = arrayArg => {\n  if (arrayArg && arrayArg.length) {\n    return false;\n  }\n  return true;\n};\n\nexport const createEnum = val =>\n  val.reduce((all, one) => {\n    return {\n      ...all,\n      [one._id]: one,\n    };\n  }, {});\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../constants\";\nimport { createEnum } from \"../../helpers\";\n\nconst ElementForm = ({\n  buttonText,\n  elementCategory,\n  elementCogRating,\n  elementDescription,\n  elementDuration,\n  elementFormat,\n  elementLabel,\n  elementLink,\n  elementMarket,\n  elementNumber,\n  elementPhysRating,\n  elementSubCategory,\n  onChange,\n  onChangeDropdown,\n  onSubmit,\n}) => {\n  const [dropdowns, setDropdowns] = useState({\n    formats: {},\n    categories: {},\n    markets: {},\n  });\n\n  useEffect(() => {\n    const componentDidMount = () => {\n      Promise.all([\n        axios.get(`${API_URL}/formats/`),\n        axios.get(`${API_URL}/categories/`),\n        axios.get(`${API_URL}/markets/`),\n      ]).then(\n        ([{ data: formats }, { data: categories }, { data: markets }]) => {\n          setDropdowns({\n            formats: createEnum(formats),\n            categories: createEnum(categories),\n            markets: createEnum(markets),\n          });\n        }\n      );\n    };\n\n    componentDidMount();\n  }, []);\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementNumber\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            name=\"elementNumber\"\n            onChange={onChange}\n            placeholder=\"add #\"\n            required\n            type=\"text\"\n            value={elementNumber}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"elementLabel\">\n          <Form.Label>Label</Form.Label>\n          <Form.Control\n            name=\"elementLabel\"\n            onChange={onChange}\n            placeholder=\"add label\"\n            required\n            type=\"text\"\n            value={elementLabel}\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementDescription\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            name=\"elementDescription\"\n            onChange={onChange}\n            placeholder=\"add description\"\n            required\n            type=\"text\"\n            value={elementDescription}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"elementFormat\">\n          <Form.Label>Format</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"elementFormat\"\n            onChange={(e) => {\n              onChangeDropdown(e, dropdowns.formats);\n            }}\n            required\n            value={elementFormat && elementFormat._id}\n          >\n            {Object.keys(dropdowns.formats).map((format, idx) => {\n              return (\n                <option key={`format-${format}`} value={format}>\n                  {dropdowns.formats[format].elementFormat}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementDuration\">\n          <Form.Label>Duration</Form.Label>\n          <Form.Control\n            name=\"elementDuration\"\n            onChange={onChange}\n            placeholder=\"min:secs\"\n            required\n            type=\"text\"\n            value={elementDuration}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"elementCategory\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"elementCategory\"\n            onChange={(e) => {\n              onChangeDropdown(e, dropdowns.categories);\n            }}\n            required\n            value={elementCategory._id}\n          >\n            {Object.keys(dropdowns.categories).map((item, idx) => {\n              return (\n                <option key={`category-${item}`} value={item}>\n                  {dropdowns.categories[item].elementCategory}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementSubCategory\">\n          <Form.Label>Subcategory</Form.Label>\n          <Form.Control\n            name=\"elementSubCategory\"\n            onChange={onChange}\n            placeholder=\"insert subcategory\"\n            required\n            type=\"text\"\n            value={elementSubCategory}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"elementMarket\">\n          <Form.Label>Market</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"elementMarket\"\n            onChange={(e) => {\n              onChangeDropdown(e, dropdowns.markets);\n            }}\n            required\n            value={elementMarket._id}\n          >\n            {Object.keys(dropdowns.markets).map((id, idx) => {\n              return (\n                <option key={`market-${id}`} value={id}>\n                  {dropdowns.markets[id].elementMarket}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementCogRating\">\n          <Form.Label>Cognitive Rating</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"elementCogRating\"\n            onChange={onChange}\n            required\n            value={elementCogRating}\n          >\n            <option defaultValue>Choose...</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"elementPhysRating\">\n          <Form.Label>Physical Rating</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"elementPhysRating\"\n            onChange={onChange}\n            required\n            value={elementPhysRating}\n          >\n            <option defaultValue>Choose...</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"elementLink\">\n          <Form.Label>Vimeo Link</Form.Label>\n          <Form.Control\n            name=\"elementLink\"\n            onChange={onChange}\n            placeholder=\"insert address\"\n            required\n            type=\"text\"\n            value={elementLink}\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row\n        style={{\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button as={Link} to=\"./\" variant=\"link\">\n          Go Back\n        </Button>\n        <Button type=\"submit\" variant=\"primary\">\n          {buttonText}\n        </Button>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default ElementForm;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst ComponentWrapper = ({ children, title, style, fluid, ...restProps }) => {\n  return (\n    <Container fluid={fluid} style={style} {...restProps}>\n      <h3>{title}</h3>\n      {children}\n    </Container>\n  );\n};\n\nComponentWrapper.propTypes = {\n  style: PropTypes.shape({}),\n  fluid: PropTypes.bool,\n};\n\nComponentWrapper.defaultProps = {\n  style: {},\n  fluid: false,\n};\n\nexport default ComponentWrapper;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport ElementForm from \"./ElementForm\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport { API_URL, BLANK_ELEMENT } from \"../../constants\";\n\nclass CreateElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...BLANK_ELEMENT,\n    };\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onChangeDropdown = (e, list) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: list[value],\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      elementCategory,\n      elementCogRating,\n      elementDescription,\n      elementDuration,\n      elementFormat,\n      elementLabel,\n      elementLink,\n      elementMarket,\n      elementNumber,\n      elementPhysRating,\n      elementSubCategory,\n    } = this.state;\n\n    axios\n      .post(`${API_URL}/elements/add`, {\n        elementCategory,\n        elementCogRating,\n        elementDescription,\n        elementDuration,\n        elementFormat,\n        elementLabel,\n        elementLink,\n        elementMarket,\n        elementNumber,\n        elementPhysRating,\n        elementSubCategory,\n      })\n      .then((res) => {\n        alert(\"Element Created!\");\n        // window.location = '/';\n        this.setState({\n          ...BLANK_ELEMENT,\n        });\n      })\n      .catch((err) => console.log({ err }));\n  };\n\n  render() {\n    return (\n      <ComponentWrapper title=\"Create a New Element\">\n        <Card bg=\"light\">\n          <Card.Body>\n            <ElementForm\n              {...this.state}\n              buttonText=\"Create Element\"\n              onChange={this.onChange}\n              onChangeDropdown={this.onChangeDropdown}\n              onSubmit={this.onSubmit}\n            />\n          </Card.Body>\n        </Card>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default CreateElement;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ElementForm from \"./ElementForm\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport { API_URL, BLANK_ELEMENT } from \"../../constants\";\n\nclass ManageElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...BLANK_ELEMENT,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    axios\n      .get(`${API_URL}/elements/${id}`)\n      .then((response) => {\n        this.setState({\n          ...response.data,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onChangeDropdown = (e, list) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: list[value],\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const {\n      elementCategory,\n      elementCogRating,\n      elementDescription,\n      elementDuration,\n      elementFormat,\n      elementLabel,\n      elementLink,\n      elementMarket,\n      elementNumber,\n      elementPhysRating,\n      elementSubCategory,\n    } = this.state;\n\n    axios\n      .put(`${API_URL}/elements/update/${id}`, {\n        elementCategory,\n        elementCogRating,\n        elementDescription,\n        elementDuration,\n        elementFormat,\n        elementLabel,\n        elementLink,\n        elementMarket,\n        elementNumber,\n        elementPhysRating,\n        elementSubCategory,\n      })\n      .then((res) => {\n        alert(\"updated!\");\n        const { history } = this.props;\n        history.push(\"/elements\");\n      })\n      .catch((err) => console.log({ err }));\n  };\n\n  render() {\n    return (\n      <ComponentWrapper title=\"Update Element\">\n        <ElementForm\n          {...this.state}\n          buttonText=\"Update Element\"\n          onChange={this.onChange}\n          onChangeDropdown={this.onChangeDropdown}\n          onSubmit={this.onSubmit}\n        />\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default ManageElement;\n","import styled from \"styled-components\";\nimport { Table } from \"react-bootstrap\";\nimport ComponentWrapper from \"./components/ComponentWrapper\";\n\nexport const CoolTableHead = styled.th`\n  text-align: left;\n  width: 700px;\n`;\n\nexport const StyledTableRow = styled.tr`\n  td {\n    text-align: left;\n    width: 700px;\n  }\n`;\n\nexport const StyledContainer = styled(ComponentWrapper)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n`;\n\nexport const StyledTable = styled(Table)`\n  table-layout: fixed;\n`;\n\nexport const StyledTbody = styled.tbody`\n  display: block;\n  width: 100%;\n  overflow: auto;\n  height: 40vh;\n  border: none;\n`;\n\nexport const StyledThead = styled.thead`\n  tr {\n    display: block;\n  }\n  border: none;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { StyledTableRow } from \"../../styles\";\n\nconst ElementsTableRow = ({\n  _id,\n  deleteElement,\n  elementCategory,\n  elementCogRating,\n  elementDescription,\n  elementDuration,\n  elementFormat,\n  elementLabel,\n  elementLink,\n  elementMarket,\n  elementNumber,\n  elementPhysRating,\n  elementSubCategory,\n}) => {\n  return (\n    <StyledTableRow>\n      <td>{elementNumber}</td>\n      <td>{elementLabel}</td>\n      <td>{elementDescription}</td>\n      <td>{elementFormat.elementFormat}</td>\n      <td>{elementDuration}</td>\n      <td>{elementCategory.elementCategory}</td>\n      <td>{elementSubCategory}</td>\n      <td>{elementMarket.elementMarket}</td>\n      <td>{elementCogRating}</td>\n      <td>{elementPhysRating}</td>\n      <td>{elementLink}</td>\n      <td style={{ whiteSpace: \"nowrap\" }}>\n        <Link to={`/-elements/edit/${_id}`}>\n          <Button size=\"sm\" variant=\"outline-warning\">\n            edit\n          </Button>\n        </Link>\n        <span> | </span>\n        <Button\n          onClick={() => {\n            deleteElement(_id);\n          }}\n          size=\"sm\"\n          variant=\"outline-danger\"\n        >\n          delete\n        </Button>\n      </td>\n    </StyledTableRow>\n  );\n};\n\nexport default ElementsTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport ElementsTableRow from \"./ElementsTableRow\";\nimport { CoolTableHead, StyledContainer } from \"../../styles\";\nimport { API_URL } from \"../../constants\";\n\nclass ElementsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { elements: [] };\n  }\n\n  componentDidMount() {\n   Promise.all([\n      axios.get(`${API_URL}/elements/`),\n      axios.get(`${API_URL}/categories/`),\n      axios.get(`${API_URL}/formats/`),\n   ]).then(([{ data: elements }, { data: categories }, {data: formats}]) => {\n     this.setState({\n       elements,\n       categories,\n       formats,\n     });\n   }).catch(error => {\n     console.log(error);\n   });\n  }\n\n  deleteElement = id => {\n    axios.delete(`${API_URL}/elements/${id}`).then(() => {\n      alert(\"deleted\");\n      this.setState(({ elements }) => {\n        return {\n          elements: elements.filter(el => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { elements, categories, formats } = this.state;\n    return (\n      <StyledContainer fluid title=\"Manage Elements\">\n        <Table hover>\n          <thead>\n            <tr>\n              <CoolTableHead>#</CoolTableHead>\n              <CoolTableHead>Label</CoolTableHead>\n              <CoolTableHead>Description</CoolTableHead>\n              <CoolTableHead>Format</CoolTableHead>\n              <CoolTableHead>Time</CoolTableHead>\n              <CoolTableHead>Category</CoolTableHead>\n              <CoolTableHead>Subcategory</CoolTableHead>\n              <CoolTableHead>Market</CoolTableHead>\n              <CoolTableHead>Cog#</CoolTableHead>\n              <CoolTableHead>Phys#</CoolTableHead>\n              <CoolTableHead>Vimeo Link</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </thead>\n          <tbody>\n            {elements.map(currentelement => {\n              return (\n                <ElementsTableRow\n                  key={currentelement._id}\n                  deleteElement={this.deleteElement}\n                  categories={categories}\n                  formats={formats}\n                  {...currentelement}\n                />\n              );\n            })}\n          </tbody>\n        </Table>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default ElementsTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { StyledTableRow } from \"../../../../styles\";\n\nconst FormatsTableRow = ({ elementFormat, _id, deleteFormat }) => (\n  <StyledTableRow>\n    <td>{elementFormat}</td>\n    <td>\n      <Link to={`/-formats/edit/${_id}`}>\n        <Button size=\"sm\" variant=\"outline-warning\">\n          edit\n        </Button>\n      </Link>\n      <span> | </span>\n      <Button\n        onClick={() => {\n          deleteFormat(_id);\n        }}\n        size=\"sm\"\n        variant=\"outline-danger\"\n      >\n        delete\n      </Button>\n    </td>\n  </StyledTableRow>\n);\n\nexport default FormatsTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FormatsTableRow from \"./FormatsTableRow\";\nimport {\n  CoolTableHead,\n  StyledTable,\n  StyledTbody,\n  StyledThead,\n} from \"../../../../styles\";\nimport { API_URL } from \"../../../../constants\";\n\nclass FormatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { formats: [] };\n  }\n\n  componentDidMount() {\n    this.fetchFormats();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { newItem } = this.props;\n    if (prevProps.newItem !== newItem) {\n      this.fetchFormats();\n    }\n  }\n\n  fetchFormats = () =>\n    axios\n      .get(`${API_URL}/formats/`)\n      .then(({ data: formats }) => {\n        this.setState({ formats });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n  deleteFormat = id => {\n    axios.delete(`${API_URL}/formats/${id}`).then(response => {\n      alert(\"deleted!\");\n      this.setState(({ formats }) => {\n        return {\n          formats: formats.filter(el => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { formats } = this.state;\n    return (\n      <div style={{ marginTop: \"6vh\" }}>\n        <h3>Manage Formats</h3>\n        <StyledTable hover>\n          <StyledThead>\n            <tr>\n              <CoolTableHead>Name</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </StyledThead>\n          <StyledTbody>\n            {formats.map(currentFormat => {\n              return (\n                <FormatsTableRow\n                  key={currentFormat._id}\n                  deleteFormat={this.deleteFormat}\n                  {...currentFormat}\n                />\n              );\n            })}\n          </StyledTbody>\n        </StyledTable>\n      </div>\n    );\n  }\n}\n\nexport default FormatList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormatList from \"./FormatList\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass CreateFormat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementFormat: \"\",\n      new_item: {},\n    };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementFormat } = this.state;\n\n    const newItem = { elementFormat };\n\n    axios\n      .post(`${API_URL}/formats/add`, newItem)\n      .then(res => {\n        alert(\"New Format Added!\");\n        this.setState({\n          elementFormat: \"\",\n          new_item: newItem,\n        });\n      })\n      .catch(error => console.log(error.response));\n  };\n\n  render() {\n    const { elementFormat } = this.state;\n\n    return (\n      <ComponentWrapper title=\"Create New Format\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementFormat\">\n            <Form.Label>Format:</Form.Label>\n            <Form.Control\n              name=\"elementFormat\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              required\n              type=\"text\"\n              value={elementFormat}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Create New Format\n          </Button>\n        </Form>\n        <FormatList newItem={this.state.new_item} />\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default CreateFormat;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass ManageFormat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementFormat: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    axios\n      .get(`${API_URL}/formats/${id}`)\n      .then(response => {\n        const { elementFormat } = response.data;\n        this.setState({\n          elementFormat,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementFormat } = this.state;\n    const { id } = this.props.match.params;\n    axios\n      .post(`${API_URL}/formats/update/${id}`, {\n        elementFormat,\n      })\n      .then(res => {\n        alert(\"updated!\");\n        const { history } = this.props;\n        history.push(\"/formats\");\n      });\n  };\n\n  render() {\n    const { elementFormat } = this.state;\n\n    return (\n      <ComponentWrapper title=\"Update Format\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementFormat\">\n            <Form.Label>Format</Form.Label>\n            <Form.Control\n              name=\"elementFormat\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              placeholder=\"add format\"\n              required\n              type=\"text\"\n              value={elementFormat}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update Format\n          </Button>\n        </Form>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default ManageFormat;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { StyledTableRow } from \"../../../../styles\";\n\nconst CategoriesTableRow = ({ elementCategory, _id, deleteCategory }) => (\n  <StyledTableRow>\n    <td>{elementCategory}</td>\n    <td>\n      <Link to={`/-categories/edit/${_id}`}>\n        <Button size=\"sm\" variant=\"outline-warning\">\n          edit\n        </Button>\n      </Link>\n      <span> | </span>\n      <Button\n        onClick={() => {\n          deleteCategory(_id);\n        }}\n        size=\"sm\"\n        variant=\"outline-danger\"\n      >\n        delete\n      </Button>\n    </td>\n  </StyledTableRow>\n);\n\nexport default CategoriesTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CategoriesTableRow from \"./CategoriesTableRow\";\nimport {\n  CoolTableHead,\n  StyledTable,\n  StyledTbody,\n  StyledThead,\n} from \"../../../../styles\";\nimport { API_URL } from \"../../../../constants\";\n\nclass CategoryList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { categories: [] };\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { newItem } = this.props;\n    if (prevProps.newItem !== newItem) {\n      this.fetchCategories();\n    }\n  }\n\n  fetchCategories = () =>\n    axios\n      .get(`${API_URL}/categories/`)\n      .then(response => {\n        this.setState({categories: response.data})\n      }\n       \n      //   ({ data: categories }) => {\n      //   this.setState({ categories });\n      // }\n      )\n      .catch(error => {\n        console.log(error);\n      });\n\n  deleteCategory = id => {\n    axios.delete(`${API_URL}/categories/${id}`).then(() => {\n      alert(\"deleted\");\n      this.setState(({ categories }) => {\n        return {\n          categories: categories.filter(el => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <div style={{ marginTop: \"6vh\" }}>\n        <h3>Manage Categories</h3>\n        <StyledTable hover>\n          <StyledThead>\n            <tr>\n              <CoolTableHead>Name</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </StyledThead>\n          <StyledTbody>\n            {categories.map(currentcat => {\n              return (\n                <CategoriesTableRow\n                  key={currentcat._id}\n                  deleteCategory={this.deleteCategory}\n                  {...currentcat}\n                />\n              );\n            })}\n          </StyledTbody>\n        </StyledTable>\n      </div>\n    );\n  }\n}\n\nexport default CategoryList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport CategoryList from \"./CategoryList\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass CreateCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementCategory: \"\",\n      new_item: {},\n    };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementCategory } = this.state;\n\n    const newItem = { elementCategory };\n\n    axios\n      .post(`${API_URL}/categories/add`, newItem)\n      .then(res => {\n        alert(\"New Category Added!\");\n        this.setState({\n          elementCategory: \"\",\n          new_item: newItem,\n        });\n      })\n      .catch(error => console.log(error.response));\n  };\n\n  render() {\n    const { elementCategory } = this.state;\n    return (\n      <ComponentWrapper title=\"Create New Category\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementCategory\">\n            <Form.Label>Category: </Form.Label>\n            <Form.Control\n              name=\"elementCategory\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              required\n              type=\"text\"\n              value={elementCategory}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Create New Category\n          </Button>\n        </Form>\n        <CategoryList newItem={this.state.new_item} />\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default CreateCategory;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass ManageCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementCategory: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    axios\n      .get(`${API_URL}/categories/${id}`)\n      .then(response => {\n        const { elementCategory } = response.data;\n        this.setState({\n          elementCategory,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementCategory } = this.state;\n    const { id } = this.props.match.params;\n    axios\n      .post(`${API_URL}/categories/update/${id}`, {\n        elementCategory,\n      })\n      .then(res => {\n        alert(\"updated!\");\n        const { history } = this.props;\n        history.push(\"/categories\");\n      });\n  };\n\n  render() {\n    const { elementCategory } = this.state;\n\n    return (\n      <ComponentWrapper title=\"Update Category\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementCategory\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              name=\"elementCategory\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              placeholder=\"add category\"\n              required\n              type=\"text\"\n              value={elementCategory}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update Category\n          </Button>\n        </Form>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default ManageCategory;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { StyledTableRow } from \"../../../../styles\";\n\nconst MarketsTableRow = ({ elementMarket, _id, deleteMarket }) => (\n  <StyledTableRow>\n    <td>{elementMarket}</td>\n    <td>\n      <Link to={`/-markets/edit/${_id}`}>\n        <Button size=\"sm\" variant=\"outline-warning\">\n          edit\n        </Button>\n      </Link>\n      <span> | </span>\n      <Button\n        onClick={() => {\n          deleteMarket(_id);\n        }}\n        size=\"sm\"\n        variant=\"outline-danger\"\n      >\n        delete\n      </Button>\n    </td>\n  </StyledTableRow>\n);\n\nexport default MarketsTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport MarketsTableRow from \"./MarketsTableRow\";\nimport {\n  CoolTableHead,\n  StyledTable,\n  StyledTbody,\n  StyledThead,\n} from \"../../../../styles\";\nimport { API_URL } from \"../../../../constants\";\n\nclass MarketList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { markets: [] };\n  }\n\n  componentDidMount() {\n    this.fetchMarkets();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { newItem } = this.props;\n    if (prevProps.newItem !== newItem) {\n      this.fetchMarkets();\n    }\n  }\n\n  fetchMarkets = () =>\n    axios\n      .get(`${API_URL}/markets/`)\n      .then(({ data: markets }) => {\n        this.setState({ markets });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n  deleteMarket = id => {\n    axios.delete(`${API_URL}/markets/${id}`).then(response => {\n      alert(\"deleted!\");\n      this.setState(prev => {\n        return {\n          markets: prev.markets.filter(el => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { markets } = this.state;\n    return (\n      <div style={{ marginTop: \"6vh\" }}>\n        <h3>Manage Markets</h3>\n        <StyledTable hover>\n          <StyledThead>\n            <tr>\n              <CoolTableHead>Name</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </StyledThead>\n          <StyledTbody>\n            {markets.map(currentMarket => {\n              return (\n                <MarketsTableRow\n                  key={currentMarket._id}\n                  deleteMarket={this.deleteMarket}\n                  {...currentMarket}\n                />\n              );\n            })}\n          </StyledTbody>\n        </StyledTable>\n      </div>\n    );\n  }\n}\n\nexport default MarketList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport MarketList from \"./MarketList\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass CreateMarket extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementMarket: \"\",\n      newItem: {},\n    };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementMarket } = this.state;\n\n    const newItem = { elementMarket };\n\n    axios\n      .post(`${API_URL}/markets/add`, newItem)\n      .then(res => {\n        alert(\"New Market Added!\");\n        this.setState({\n          elementMarket: \"\",\n          newItem,\n        });\n      })\n      .catch(error => console.log(error.response));\n  };\n\n  render() {\n    const { elementMarket } = this.state;\n\n    return (\n      <ComponentWrapper title=\"Create New Market\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementMarket\">\n            <Form.Label>Market:</Form.Label>\n            <Form.Control\n              name=\"elementMarket\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              required\n              type=\"text\"\n              value={elementMarket}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Create New Market\n          </Button>\n        </Form>\n        <MarketList newItem={this.state.newItem} />\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default CreateMarket;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass ManageMarket extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elementMarket: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    axios\n      .get(`${API_URL}/markets/${id}`)\n      .then(response => {\n        const { elementMarket } = response.data;\n        this.setState({\n          elementMarket,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { elementMarket } = this.state;\n    const { id } = this.props.match.params;\n    axios\n      .post(`${API_URL}/markets/update/${id}`, {\n        elementMarket,\n      })\n      .then(res => {\n        alert(\"updated\");\n        const { history } = this.props;\n        history.push(\"/markets\");\n      });\n  };\n\n  render() {\n    const { elementMarket } = this.state;\n\n    return (\n      <ComponentWrapper title=\"Update Market\">\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"elementMarket\">\n            <Form.Label>Market</Form.Label>\n            <Form.Control\n              name=\"elementMarket\"\n              onChange={e => {\n                const { name, value } = e.target;\n                this.setState({\n                  [name]: value,\n                });\n              }}\n              placeholder=\"add market\"\n              required\n              type=\"text\"\n              value={elementMarket}\n            />\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update Market\n          </Button>\n        </Form>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default ManageMarket;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Table } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst TrackTable = styled(Table)`\n  font-size: 95%;\n  table-layout: fixed;\n  white-space: nowrap;\n  background-color: none;\n  th,\n  td {\n    width: 30%;\n    padding: 2px;\n    border-style: hidden !important;\n  }\n`;\n\nconst ElementCard = styled.div`\n  margin: 2px;\n  padding: 10px;\n  background-color: ${(props) => (props.isDragging ? \"lightgreen\" : \"white\")};\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n`;\n\nconst Task = ({\n  _id,\n  elementCategory,\n  elementCogRating,\n  elementDescription,\n  elementDuration,\n  elementFormat,\n  elementLabel,\n  elementLink,\n  elementMarket,\n  elementNumber,\n  elementPhysRating,\n  elementSubCategory,\n  index,\n}) => {\n  return (\n    <Draggable draggableId={_id} index={index}>\n      {({ draggableProps, dragHandleProps, innerRef }, { isDragging }) => (\n        <ElementCard\n          {...{ ...draggableProps, ...dragHandleProps, isDragging }}\n          ref={innerRef}\n        >\n          <TrackTable>\n            <thead>\n              <tr>\n                <th>Element #: {elementNumber}</th>\n                <th>{elementLabel}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Description: {elementDescription}</td>\n              </tr>\n              <tr>\n                <td>Format: {elementFormat.elementFormat}</td>\n                <td>Time: {elementDuration}</td>\n                <td>Category: {elementCategory.elementCategory}</td>\n              </tr>\n              <tr>\n                <td>SubCat: {elementSubCategory}</td>\n                <td>Market: {elementMarket.elementMarket}</td>\n                <td>Cog Rating: {elementCogRating}</td>\n                <td>Phys Rating: {elementPhysRating}</td>\n              </tr>\n\n              <tr>\n                <td>{elementLink}</td>\n              </tr>\n            </tbody>\n          </TrackTable>\n        </ElementCard>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Card, ListGroup, Col } from \"react-bootstrap\";\nimport Task from \"./Task\";\n\nconst StyledColumnWrap = styled(Card)`\n  height: 73vh;\n  margin: 1px;\n  transition: background-color 0.1s ease 0s;\n`;\n\nconst StyledTaskList = styled(ListGroup)`\n  align-items: stretch;\n  background-color: ${props => (props.isDraggingOver ? \"lightblue\" : \"white\")};\n  flex-grow: 1;\n  font-size: 90%;\n  overflow-y: scroll;\n  padding: 8px;\n`;\n\nconst Column = ({ id, name, items }) => {\n  return (\n    <Col>\n      <StyledColumnWrap>\n        <Card.Header>{name}</Card.Header>\n        <Droppable key={id} droppableId={id}>\n          {({ droppableProps, innerRef, placeholder }, { isDraggingOver }) => {\n            return (\n              <StyledTaskList\n                {...{ ...droppableProps }}\n                ref={innerRef}\n                style={{\n                  backgroundColor: `${isDraggingOver ? \"lightblue\" : \"white\"}`,\n                }}\n              >\n                {items.map((task, index) => {\n                  return <Task {...{ ...task, index, key: task._id }} />;\n                })}\n                {placeholder}\n              </StyledTaskList>\n            );\n          }}\n        </Droppable>\n      </StyledColumnWrap>\n    </Col>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nconst TrackForm = ({\n  onSubmit,\n  onChange,\n  trackNumber,\n  trackName,\n  buttonText,\n}) => {\n  return (\n    <Form id=\"submit-track\" onSubmit={onSubmit}>\n      <Form.Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <Form.Group as={Col} controlId=\"trackNumber\">\n          <Form.Label>Track Number</Form.Label>\n          <Form.Control\n            name=\"trackNumber\"\n            onChange={onChange}\n            placeholder=\"add number\"\n            type=\"text\"\n            value={trackNumber}\n          />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"trackName\">\n          <Form.Label>Track Name</Form.Label>\n          <Form.Control\n            name=\"trackName\"\n            onChange={onChange}\n            placeholder=\"add name\"\n            type=\"text\"\n            value={trackName}\n          />\n        </Form.Group>\n        <Col>\n          <Button style={{ marginTop: \"15px\" }} type=\"submit\" variant=\"primary\">\n            {buttonText}\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default TrackForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Row } from \"react-bootstrap\";\nimport Column from \"./TracksBoard/Column\";\nimport TrackForm from \"./TrackForm\";\nimport { StyledContainer } from \"../../styles\";\nimport { API_URL } from \"../../constants\";\n\nclass CreateTrack extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trackName: \"\",\n      trackNumber: \"\",\n      elements: [],\n      columns: {\n        \"column-1\": {\n          name: \"Elements\",\n          items: [],\n        },\n        \"column-2\": {\n          name: \"Track List\",\n          items: [],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}/elements/`).then(response => {\n      this.setState(prev => {\n        const copy = { ...prev };\n        const { columns } = copy;\n        copy.elements = response.data;\n\n        columns[\"column-1\"].items = [\n          ...copy.columns[\"column-1\"].items,\n          ...response.data,\n        ];\n\n        return copy;\n      });\n    });\n  }\n\n  onChange = e => {\n    const { id, value } = e.target;\n    this.setState({\n      [id]: value,\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { trackNumber, trackName, columns } = this.state;\n    axios\n      .post(`${API_URL}/tracks/add`, {\n        trackNumber,\n        trackName,\n        trackInfo: columns[\"column-2\"].items,\n      })\n      .then(res => {\n        this.setState(prev => {\n          return {\n            ...prev,\n            trackName: \"\",\n            trackNumber: \"\",\n            columns: {\n              \"column-1\": {\n                name: \"Elements\",\n                items: prev.elements,\n              },\n              \"column-2\": {\n                name: \"Track List\",\n                items: [],\n              },\n            },\n          };\n        });\n      });\n  };\n\n  render() {\n    const { columns } = this.state;\n    return (\n      <StyledContainer fluid title=\"Create Track\">\n        <TrackForm\n          {...this.state}\n          buttonText=\"Submit\"\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n        />\n        <DragDropContext\n          onDragEnd={({ source, destination }) => {\n            if (!destination) {\n              return;\n            }\n\n            if (source.droppableId !== destination.droppableId) {\n              this.setState(prev => {\n                const sourceColumn = prev.columns[source.droppableId];\n                const destColumn = prev.columns[destination.droppableId];\n                const sourceItems = [...sourceColumn.items];\n                const destItems = [...destColumn.items];\n                const [removed] = sourceItems.splice(source.index, 1);\n                destItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [source.droppableId]: {\n                      ...sourceColumn,\n                      items: sourceItems,\n                    },\n                    [destination.droppableId]: {\n                      ...destColumn,\n                      items: destItems,\n                    },\n                  },\n                };\n              });\n            } else {\n              this.setState(prev => {\n                const column = prev.columns[source.droppableId];\n                const copiedItems = [...column.items];\n                const [removed] = copiedItems.splice(source.index, 1);\n                copiedItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [source.droppableId]: {\n                      ...column,\n                      items: copiedItems,\n                    },\n                  },\n                };\n              });\n            }\n          }}\n        >\n          <Row>\n            {Object.entries(columns).map(([id, column]) => {\n              return <Column {...{ ...column, id, key: id }} />;\n            })}\n          </Row>\n        </DragDropContext>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default CreateTrack;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Row } from \"react-bootstrap\";\nimport Column from \"./TracksBoard/Column\";\nimport TrackForm from \"./TrackForm\";\nimport { StyledContainer } from \"../../styles\";\nimport { API_URL } from \"../../constants\";\n\nclass ManageTrack extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trackName: \"\",\n      trackNumber: \"\",\n      trackInfo: [],\n      elements: [],\n      elementsEnums: {},\n      columns: {\n        \"column-1\": {\n          name: \"Elements\",\n          items: [],\n        },\n        \"column-2\": {\n          name: \"Track List\",\n          items: [],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    Promise.all([\n      axios.get(`${API_URL}/tracks/${id}`).then((response) => {\n        return response.data;\n      }),\n      axios.get(`${API_URL}/elements/`).then((response) => {\n        return response.data;\n      }),\n    ]).then(([tracks, elements]) => {\n      const elementsEnums = elements.reduce((all, one) => {\n        return {\n          ...all,\n          [one._id]: one,\n        };\n      }, {});\n\n      this.setState((oldState) => {\n        const state = { ...oldState };\n\n        state.columns[\"column-1\"].items = elements.filter((element) => {\n          return !tracks.trackInfo.some(\n            (trackEle) => trackEle._id === element._id\n          );\n        });\n\n        state.columns[\"column-2\"].items = tracks.trackInfo;\n        return {\n          ...state,\n          ...tracks,\n          elementsEnums,\n          elements,\n        };\n      });\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const { trackNumber, trackName, columns } = this.state;\n    const track = {\n      trackNumber,\n      trackName,\n      trackInfo: columns[\"column-2\"].items,\n    };\n\n    axios.put(`${API_URL}/tracks/update/${id}`, track).then((res) => {\n      const { history } = this.props;\n      alert(\"updated!\");\n      history.push(\"/tracks\");\n    });\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { columns, elementsEnums, elements, trackInfo, ...rest } = this.state;\n    // const col1 = columns[\"column-1\"];\n    // const col2 = columns[\"column-2\"];\n    return (\n      <StyledContainer fluid title=\"Update Track\">\n        <TrackForm\n          {...this.state}\n          buttonText=\"Update Track\"\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n        />\n        <DragDropContext\n          onDragEnd={({ source, destination }) => {\n            if (!destination) {\n              return;\n            }\n            const { droppableId: sourceId, index: sourceIndex } = source;\n            const {\n              droppableId: destinationId,\n              index: destinationIndex,\n            } = destination;\n\n            if (sourceId !== destinationId) {\n              this.setState((prev) => {\n                const sourceColumn = prev.columns[sourceId];\n                const destColumn = prev.columns[destinationId];\n                const sourceItems = [...sourceColumn.items];\n                const destItems = [...destColumn.items];\n\n                const [removed] = sourceItems.splice(source.index, 1);\n\n                destItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [sourceId]: {\n                      ...sourceColumn,\n                      items: sourceItems,\n                    },\n                    [destinationId]: {\n                      ...destColumn,\n                      items: destItems,\n                    },\n                  },\n                };\n              });\n            } else {\n              this.setState((prev) => {\n                const column = prev.columns[sourceId];\n                const copiedItems = [...column.items];\n                const [removed] = copiedItems.splice(source.index, 1);\n                copiedItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [sourceId]: {\n                      ...column,\n                      items: copiedItems,\n                    },\n                  },\n                };\n              });\n            }\n          }}\n        >\n          <Row>\n            {Object.entries(columns).map(([id, column]) => {\n              return <Column {...{ ...column, id, key: id }} />;\n            })}\n          </Row>\n        </DragDropContext>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default ManageTrack;\n","import React from \"react\";\n\nconst ElemData = ({\n  elementNumber,\n  elementLabel,\n  elementDuration,\n  elementLink,\n  slideNumber,\n}) => {\n  return (\n    <tr>\n      <td>{slideNumber}</td>\n      <td>{elementNumber}</td>\n      <td>{elementLabel}</td>\n      <td>{elementDuration}</td>\n      <td>{elementLink}</td>\n    </tr>\n  );\n};\n\nexport default ElemData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport ElemData from \"./TracksTableElemData\";\nimport { StyledTable } from \"../../styles\";\n\nconst TracksTableRow = ({\n  _id,\n  deleteTrack,\n  elements,\n  info,\n  trackInfo,\n  trackName,\n  trackNumber,\n}) => {\n  return (\n    <tr>\n      <td>\n        <strong>{trackNumber}</strong>\n      </td>\n      <td>\n        <strong>{trackName}</strong>\n      </td>\n      <td>\n        <StyledTable borderless responsive size=\"sm\">\n          <thead>\n            <tr>\n              <th width=\"75\">Slide #</th>\n              <th width=\"100\">Element #</th>\n              <th width=\"200\">Label</th>\n              <th width=\"100\">Timing</th>\n              <th width=\"400\">Link</th>\n            </tr>\n          </thead>\n          <tbody style={{ border: \"none\", fontSize: \"90%\" }}>\n            {trackInfo.map((element, idx) => {\n              return (\n                <ElemData\n                  key={element._id}\n                  slideNumber={idx + 1}\n                  {...element}\n                />\n              );\n            })}\n          </tbody>\n        </StyledTable>\n      </td>\n      <td style={{ whiteSpace: \"nowrap\" }}>\n        <Link to={`/-tracks/edit/${_id}`}>\n          <Button size=\"sm\" variant=\"outline-warning\">\n            edit\n          </Button>\n        </Link>\n        <span> | </span>\n        <Button\n          onClick={() => {\n            deleteTrack(_id);\n          }}\n          size=\"sm\"\n          variant=\"outline-danger\"\n        >\n          delete\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default TracksTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport TracksTableRow from \"./TracksTableRow\";\nimport { CoolTableHead, StyledContainer } from \"../../styles\";\n// import ComponentWrapper from \"../ComponentWrapper\";\nimport { API_URL } from \"../../constants\";\n\nclass TracksTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tracks: [], elements: [] };\n  }\n\n  componentDidMount() {\n    Promise.all([\n      axios.get(`${API_URL}/elements/`),\n      axios.get(`${API_URL}/tracks/`),\n    ]).then(([e, t]) => {\n      const { data: elements } = e;\n      const { data: tracks } = t;\n      this.setState({\n        elements: elements.reduce((all, one) => {\n          return {\n            ...all,\n            [one._id]: one,\n          };\n        }, {}),\n        tracks,\n      });\n    });\n  }\n\n  deleteTrack = id => {\n    axios.delete(`${API_URL}/tracks/${id}`).then(() => {\n      alert(\"deleted\");\n      this.setState(({ tracks }) => {\n        return {\n          tracks: tracks.filter(el => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { tracks, elements } = this.state;\n    return (\n      <StyledContainer fluid title=\"Tracks\">\n        <Table hover>\n          <thead style={{ borderBottom: \"2px solid white\" }}>\n            <tr>\n              <CoolTableHead width=\"200\">Track #</CoolTableHead>\n              <CoolTableHead width=\"200\">Track Name</CoolTableHead>\n              <CoolTableHead>Track Info</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </thead>\n          <tbody>\n            {tracks.map(currentTrack => {\n              return (\n                <TracksTableRow\n                  key={currentTrack._id}\n                  deleteTrack={this.deleteTrack}\n                  {...{ ...currentTrack, elements: elements || [] }}\n                />\n              );\n            })}\n          </tbody>\n        </Table>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default TracksTable;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Container = styled.div`\n  background-color: ${props => (props.isDragging ? \"lightgreen\" : \"white\")};\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n  margin-bottom: 8px;\n  margin-right: 2px;\n  padding: 8px 10px;\n  min-width: 200px;\n  white-space: nowrap;\n\n  ul {\n    padding-left: 20px;\n    font-weight: 700;\n  }\n`;\n\nconst Task = ({ _id, trackNumber, trackName, index }) => {\n  return (\n    <Draggable draggableId={_id} index={index}>\n      {({ draggableProps, dragHandleProps, innerRef }, { isDragging }) => (\n        <Container\n          {...{ ...draggableProps, ...dragHandleProps, isDragging }}\n          ref={innerRef}\n        >\n          <ul>\n            <li>{trackNumber}</li>\n            <li>{trackName}</li>\n          </ul>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Card } from \"react-bootstrap\";\nimport Task from \"./Task\";\n\nconst StyledColumnWrap = styled.div`\n  border-radius: 4px;\n  border: 1px solid lightgrey;\n  display: flex;\n  flex-direction: column;\n  font-size: 90%;\n  height: 35vh;\n  margin: 1vh 5vh 8px 1px;\n  transition: background-color 0.1s ease 0s;\n`;\n\nconst StyledTaskList = styled.div`\n  background-color: ${props => (props.isDraggingOver ? \"lightblue\" : \"white\")};\n  display: flex;\n  flex-grow: 1;\n  height: 35vh;\n  overflow-x: scroll;\n  padding: 8px;\n`;\n\nconst Column = ({ id, name, items }) => {\n  return (\n    <StyledColumnWrap>\n      <Card.Header>{name}</Card.Header>\n      <Droppable key={id} direction=\"horizontal\" droppableId={id}>\n        {({ droppableProps, innerRef, placeholder }, { isDraggingOver }) => {\n          return (\n            <StyledTaskList\n              {...{ ...droppableProps }}\n              ref={innerRef}\n              style={{\n                backgroundColor: `${isDraggingOver ? \"lightblue\" : \"white\"}`,\n              }}\n            >\n              {items.map((task, index) => {\n                return <Task {...{ ...task, index, key: task._id }} />;\n              })}\n              {placeholder}\n            </StyledTaskList>\n          );\n        }}\n      </Droppable>\n    </StyledColumnWrap>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nconst ProgramForm = ({\n  onSubmit,\n  onChange,\n  programNumber,\n  programName,\n  buttonText,\n}) => {\n  return (\n    <Form id=\"submit-program\" onSubmit={onSubmit}>\n      <Form.Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <Form.Group as={Col} controlId=\"programNumber\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            name=\"programNumber\"\n            onChange={onChange}\n            placeholder=\"add number\"\n            type=\"text\"\n            value={programNumber}\n          />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"programName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            name=\"programName\"\n            onChange={onChange}\n            placeholder=\"add name\"\n            type=\"text\"\n            value={programName}\n          />\n        </Form.Group>\n        <Col>\n          <Button style={{ marginTop: \"15px\" }} type=\"submit\" variant=\"primary\">\n            {buttonText}\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default ProgramForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n// import { Button, Col } from \"react-bootstrap\";\nimport Column from \"./ProgramBoard/Column\";\nimport { API_URL } from \"../../constants\";\nimport ProgramForm from \"./ProgramForm\";\nimport { StyledContainer } from \"../../styles\";\n\nexport default class CreateProgram extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      programNumber: \"\",\n      programName: \"\",\n      tracks: [],\n      columns: {\n        \"column-1\": {\n          name: \"Track List\",\n          items: [],\n        },\n        \"column-2\": {\n          name: \"Program List\",\n          items: [],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}/tracks/`).then(response => {\n      this.setState(prev => {\n        const copy = { ...prev };\n        const { columns } = copy;\n        copy.tracks = response.data;\n\n        columns[\"column-1\"].items = [\n          ...copy.columns[\"column-1\"].items,\n          ...response.data,\n        ];\n\n        return copy;\n      });\n    });\n  }\n\n  onChange = e => {\n    const { id, value } = e.target;\n    this.setState({\n      [id]: value,\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { programNumber, programName, columns } = this.state;\n    axios\n      .post(`${API_URL}/programs/add`, {\n        programNumber,\n        programName,\n        programInfo: columns[\"column-2\"].items,\n      })\n      .then(res => {\n        this.setState(prev => {\n          return {\n            ...prev,\n            programNumber: \"\",\n            programName: \"\",\n            columns: {\n              \"column-1\": {\n                name: \"Track List\",\n                items: prev.tracks,\n              },\n              \"column-2\": {\n                name: \"Program List\",\n                items: [],\n              },\n            },\n          };\n        });\n      });\n  };\n\n  render() {\n    const { columns } = this.state;\n    return (\n      <StyledContainer fluid title=\"Create Program\">\n        <ProgramForm\n          {...this.state}\n          buttonText=\"Create\"\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n        />\n        <DragDropContext\n          onDragEnd={({ source, destination }) => {\n            if (!destination) {\n              return;\n            }\n\n            if (source.droppableId !== destination.droppableId) {\n              this.setState(prev => {\n                const sourceColumn = prev.columns[source.droppableId];\n                const destColumn = prev.columns[destination.droppableId];\n                const sourceItems = [...sourceColumn.items];\n                const destItems = [...destColumn.items];\n                const [removed] = sourceItems.splice(source.index, 1);\n                destItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [source.droppableId]: {\n                      ...sourceColumn,\n                      items: sourceItems,\n                    },\n                    [destination.droppableId]: {\n                      ...destColumn,\n                      items: destItems,\n                    },\n                  },\n                };\n              });\n            } else {\n              this.setState(prev => {\n                const column = prev.columns[source.droppableId];\n                const copiedItems = [...column.items];\n                const [removed] = copiedItems.splice(source.index, 1);\n                copiedItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [source.droppableId]: {\n                      ...column,\n                      items: copiedItems,\n                    },\n                  },\n                };\n              });\n            }\n          }}\n        >\n          {Object.entries(columns).map(([id, column]) => {\n            return <Column {...{ ...column, id, key: id }} />;\n          })}\n        </DragDropContext>\n      </StyledContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"./ProgramBoard/Column\";\nimport ProgramForm from \"./ProgramForm\";\nimport { API_URL } from \"../../constants\";\nimport { StyledContainer } from \"../../styles\";\n\nclass ManageProgram extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programName: \"\",\n      programNumber: \"\",\n      programInfo: [],\n      tracks: [],\n      tracksEnums: {},\n      columns: {\n        \"column-1\": {\n          name: \"Tracks\",\n          items: [],\n        },\n        \"column-2\": {\n          name: \"Program List\",\n          items: [],\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    Promise.all([\n      axios.get(`${API_URL}/programs/${id}`).then((response) => {\n        return response.data;\n      }),\n      axios.get(`${API_URL}/tracks/`).then((response) => {\n        return response.data;\n      }),\n    ]).then(([programs, tracks]) => {\n      const tracksEnums = tracks.reduce((all, one) => {\n        return {\n          ...all,\n          [one._id]: one,\n        };\n      }, {});\n\n      this.setState((oldState) => {\n        const state = { ...oldState };\n\n        state.columns[\"column-1\"].items = tracks.filter((track) => {\n          return !programs.programInfo.some(\n            (progTrac) => progTrac._id === track._id\n          );\n        });\n\n        state.columns[\"column-2\"].items = programs.programInfo;\n        return {\n          ...state,\n          ...programs,\n          tracksEnums,\n          tracks,\n        };\n      });\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const { programNumber, programName, columns } = this.state;\n    const program = {\n      programNumber,\n      programName,\n\n      programInfo: columns[\"column-2\"].items,\n    };\n\n    axios.put(`${API_URL}/programs/update/${id}`, program).then((res) => {\n      const { history } = this.props;\n      alert(\"updated!\");\n      history.push(\"/programs\");\n    });\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { columns, tracksEnums, tracks, programInfo, ...rest } = this.state;\n    const col1 = columns[\"column-1\"];\n    const col2 = columns[\"column-2\"];\n    return (\n      <StyledContainer fluid title=\"Update Program\">\n        <ProgramForm\n          {...this.state}\n          buttonText=\"Update Program\"\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n        />\n        <DragDropContext\n          onDragEnd={({ source, destination }) => {\n            if (!destination) {\n              return;\n            }\n            const { droppableId: sourceId, index: sourceIndex } = source;\n            const {\n              droppableId: destinationId,\n              index: destinationIndex,\n            } = destination;\n\n            if (sourceId !== destinationId) {\n              this.setState((prev) => {\n                const sourceColumn = prev.columns[sourceId];\n                const destColumn = prev.columns[destinationId];\n                const sourceItems = [...sourceColumn.items];\n                const destItems = [...destColumn.items];\n                const [removed] = sourceItems.splice(source.index, 1);\n                destItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [sourceId]: {\n                      ...sourceColumn,\n                      items: sourceItems,\n                    },\n                    [destinationId]: {\n                      ...destColumn,\n                      items: destItems,\n                    },\n                  },\n                };\n              });\n            } else {\n              this.setState((prev) => {\n                const column = prev.columns[sourceId];\n                const copiedItems = [...column.items];\n                const [removed] = copiedItems.splice(source.index, 1);\n                copiedItems.splice(destination.index, 0, removed);\n                return {\n                  ...prev,\n                  columns: {\n                    ...prev.columns,\n                    [sourceId]: {\n                      ...column,\n                      items: copiedItems,\n                    },\n                  },\n                };\n              });\n            }\n          }}\n        >\n          {Object.entries(columns).map(([id, column]) => {\n            return <Column {...{ ...column, id, key: id }} />;\n          })}\n        </DragDropContext>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default ManageProgram;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nconst ProgramsTableRow = ({\n  programNumber,\n  programName,\n  _id,\n  deleteProgram,\n}) => {\n  return (\n    <tr>\n      <td>{programNumber}</td>\n      <td>{programName}</td>\n      <td style={{ whiteSpace: \"nowrap\" }}>\n        <Link to={`/-programs/edit/${_id}`}>\n          <Button size=\"sm\" variant=\"outline-warning\">\n            edit\n          </Button>\n        </Link>\n        <span> | </span>\n        <Button\n          onClick={() => {\n            deleteProgram(_id);\n          }}\n          size=\"sm\"\n          variant=\"outline-danger\"\n        >\n          delete\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ProgramsTableRow;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"react-bootstrap\";\nimport ProgramsTableRow from \"./ProgramsTableRow\";\nimport { CoolTableHead } from \"../../styles\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport { API_URL } from \"../../constants\";\n\nclass ProgramsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { programInfo: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/programs/`)\n      .then((response) => {\n        this.setState({ programInfo: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteProgram = (id) => {\n    axios.delete(`${API_URL}/programs/${id}`).then((response) => {\n      alert(\"deleted\");\n      this.setState((prev) => {\n        return {\n          programInfo: prev.programInfo.filter((el) => el._id !== id),\n        };\n      });\n    });\n  };\n\n  render() {\n    const { programInfo } = this.state;\n    return (\n      <ComponentWrapper title=\"Programs\">\n        <Table hover>\n          <thead>\n            <tr>\n              <CoolTableHead>Program #</CoolTableHead>\n              <CoolTableHead>Program Name</CoolTableHead>\n              <CoolTableHead>Actions</CoolTableHead>\n            </tr>\n          </thead>\n          <tbody>\n            {programInfo.map((currentProgram) => {\n              return (\n                <ProgramsTableRow\n                  key={currentProgram._id}\n                  deleteProgram={this.deleteProgram}\n                  {...currentProgram}\n                />\n              );\n            })}\n          </tbody>\n        </Table>\n      </ComponentWrapper>\n    );\n  }\n}\n\nexport default ProgramsTable;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"@atlaskit/css-reset\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport NavbarMain from \"./components/NavbarMain\";\n\nimport CreateElement from \"./components/Elements/CreateElement\";\nimport ManageElement from \"./components/Elements/ManageElement\";\nimport ElementsTable from \"./components/Elements/ElementsTable\";\n\nimport CreateFormat from \"./components/Elements/DropdownItems/Formats/CreateFormat\";\nimport ManageFormat from \"./components/Elements/DropdownItems/Formats/ManageFormat\";\n\nimport CreateCategory from \"./components/Elements/DropdownItems/Categories/CreateCategory\";\nimport ManageCategory from \"./components/Elements/DropdownItems/Categories/ManageCategory\";\n\nimport CreateMarket from \"./components/Elements/DropdownItems/Markets/CreateMarket\";\nimport ManageMarket from \"./components/Elements/DropdownItems/Markets/ManageMarket\";\n\nimport CreateTrack from \"./components/Tracks/CreateTrack\";\nimport ManageTrack from \"./components/Tracks/ManageTrack\";\nimport TracksTable from \"./components/Tracks/TracksTable\";\n\nimport CreateProgram from \"./components/Programs/CreateProgram\";\nimport ManageProgram from \"./components/Programs/ManageProgram\";\nimport ProgramsTable from \"./components/Programs/ProgramsTable\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div id=\"App\">\n        <NavbarMain />\n        <br />\n        <Route component={ElementsTable} exact path=\"/-elements\" />\n        <Route component={CreateElement} exact path=\"/-elements/create\" />\n        <Route component={ManageElement} exact path=\"/-elements/edit/:id\" />\n\n        <Route component={CreateFormat} exact path=\"/-formats\" />\n        <Route component={ManageFormat} path=\"/-formats/edit/:id\" />\n\n        <Route component={CreateCategory} exact path=\"/-categories\" />\n        <Route component={ManageCategory} exact path=\"/-categories/edit/:id\" />\n\n        <Route component={CreateMarket} exact path=\"/-markets\" />\n        <Route component={ManageMarket} exact path=\"/-markets/edit/:id\" />\n\n        <Route component={TracksTable} exact path=\"/-tracks\" />\n        <Route component={CreateTrack} exact path=\"/-tracks/create\" />\n        <Route component={ManageTrack} exact path=\"/-tracks/edit/:id\" />\n\n        <Route component={ProgramsTable} exact path=\"/-programs\" />\n        <Route component={CreateProgram} exact path=\"/-programs/create\" />\n        <Route component={ManageProgram} exact path=\"/-programs/edit/:id\" />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/logo.07899b00.png\";"],"sourceRoot":""}